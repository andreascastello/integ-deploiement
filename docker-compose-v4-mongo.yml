version: '3.8'

x-common-variables: &common-variables
  REACT_APP_SERVER_PORT: 8000

services:

  db:
    image: mysql:9.2
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - ./sqlfiles/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: mysqladmin ping -h localhost
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    depends_on:
      - db
    image: adminer
    ports:
      - 8081:8081
    environment:
      <<: *common-variables

  server:
    restart: on-failure
    image: python-api-2
    build:
      context: ./server
      dockerfile: DockerfilePython
    ports:
      - 8000:8000
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/public-users"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: uvicorn server:app --proxy-headers --host 0.0.0.0 --port 8000

  react:
    build:
      context: .
      dockerfile: DockerfileReact
    ports:
      - 3000:3000
    environment:
      - VITE_REACT_APP_SERVER_URL=http://localhost:8000
      - VITE_BASE_PATH=/integ-deploiement/
      - VITE_REACT_APP_EXPRESS_API_URL=http://blog-api:8080
    depends_on:
      server:
        condition: service_healthy
      blog-api:
        condition: service_started
    tty: true

  # Service MongoDB ajoutÃ©
  mongo:
    image: mongo:6
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-root}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-example}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-blog}
    ports:
      - 27017:27017
    volumes:
      - ./mongo-init:/docker-entrypoint-initdb.d
    command: ["--bind_ip_all"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME:-root}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-example}
    depends_on:
      - mongo 

  blog-api:
    image: andreascastello06/express_mongodb_app_ynov:latest
    ports:
      - 3001:8080
    environment:
      - MONGO_URI=mongodb://root:example@mongo:27017/blog?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - PORT=8080
    depends_on:
      mongo:
        condition: service_healthy 