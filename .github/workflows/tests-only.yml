name: Tests Frontend - Push & Pull Request

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Clean npm cache and modules
        run: |
          rm -rf node_modules
          rm -f package-lock.json
          npm cache clean --force

      - name: Install dependencies and run tests
        env:
          VITE_REACT_APP_SERVER_URL: ${{ secrets.VITE_REACT_APP_SERVER_URL }}
          VITE_REACT_APP_EXPRESS_API_URL: http://blog-api:8080
        run: |
          npm install
          npm run coverage
          npm run jsdoc

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test-e2e:
    runs-on: ubuntu-latest
    needs: test-frontend
    steps:
      - uses: actions/checkout@v4

      - name: Recreate .env file securely
        run: echo "$ENV_FILE" > .env
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}

      - name: Start Docker environment
        run: docker compose -f docker-compose-v4-mongo.yml up -d --build
        working-directory: ./

      - name: Vérifier l'état des services
        run: |
          echo "✅ Services démarrés avec succès"
          docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
        working-directory: ./

      - name: Wait for services to be ready
        run: |
          echo "Waiting for backend (http://localhost:8000) to be ready..."
          timeout 120 bash -c 'until curl -f http://localhost:8000/public-users > /dev/null 2>&1; do echo "Backend not ready yet..."; sleep 5; done'
          echo "Backend is ready!"
          echo "Waiting for frontend (http://localhost:3000) to be ready..."
          timeout 120 bash -c 'until curl -f http://localhost:3000 > /dev/null 2>&1; do echo "Frontend not ready yet..."; sleep 5; done'
          echo "Frontend is ready!"
          echo "Waiting for Node.js API (http://localhost:3001) to be ready..."
          timeout 120 bash -c 'until curl -f http://localhost:3001/api/posts > /dev/null 2>&1; do echo "Node.js API not ready yet..."; sleep 5; done'
          echo "Node.js API is ready!"
        working-directory: ./

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Clean node_modules and cache
        run: |
          rm -rf node_modules
          rm -f package-lock.json
          npm cache clean --force
        working-directory: ./

      - name: Fix permissions
        run: |
          sudo chown -R $USER:$USER .
        working-directory: ./

      - name: Install front dependencies
        run: npm install
        working-directory: ./

      - name: Run Cypress tests against Docker environment
        env:
          VITE_REACT_APP_SERVER_URL: http://localhost:8000
          VITE_REACT_APP_EXPRESS_API_URL: http://localhost:3001
          CYPRESS_BASE_URL: http://localhost:3000/integ-deploiement/
        run: |
          npx cypress install
          npx cypress run --config-file cypress.config.cjs --browser chrome --headless
        working-directory: ./

      - name: Upload Cypress screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots
